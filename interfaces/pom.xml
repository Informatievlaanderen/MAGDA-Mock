<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>magda</artifactId>
    <groupId>be.vlaanderen.vip.mock</groupId>
    <version>0.26.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <artifactId>interfaces</artifactId>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${logstash.logback.version}</version>
    </dependency>
    <dependency>
      <groupId>org.dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>${dom4j.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.wss4j</groupId>
      <artifactId>wss4j-ws-security-dom</artifactId>
      <version>2.4.1</version>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15on</artifactId>
      <version>1.70</version>
    </dependency>
    <!-- commons lang -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
    <dependency>
      <groupId>org.apache.httpcomponents.client5</groupId>
      <artifactId>httpclient5</artifactId>
      <version>${apache.httpcomponents.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
          <parameters>true</parameters>
          <compilerArgs>
            <compilerArg>
              -Amapstruct.suppressGeneratorTimestamp=true
            </compilerArg>
            <compilerArg>
              -Amapstruct.suppressGeneratorVersionInfoComment=true
            </compilerArg>
            <compilerArg>
              -Amapstruct.defaultComponentModel=spring
            </compilerArg>
            <compilerArg>
              -Amapstruct.unmappedTargetPolicy=WARN
            </compilerArg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${mapstruct-lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
	<groupId>org.jacoco</groupId>
	<artifactId>jacoco-maven-plugin</artifactId>
	<executions>
	  <!-- Prepare jacoco agent - once for unit test and once for integration 
	       test (cucumber) -->
	  <execution>
	    <id>default-prepare-agent</id>
	    <goals>
	      <goal>prepare-agent</goal>
	    </goals>
	  </execution>
	  <execution>
	    <id>pre-integration-test</id>
	    <goals>
	      <goal>prepare-agent-integration</goal>
	    </goals>
	  </execution>

	  <!-- Generate report after unit test and another after integration tests -->
	  <execution>
	    <id>default-report</id>
	    <goals>
	      <goal>report</goal>
	    </goals>
	    <phase>prepare-package</phase>
	  </execution>

	  <execution>
	    <id>default-report-integration</id>
	    <goals>
	      <goal>report-integration</goal>
	    </goals>
	    <phase>post-integration-test</phase>
	  </execution>

	  <!-- Aggregate test coverage results of unit test and integration tests -->
	  <execution>
	    <id>merge-results</id>
	    <phase>verify</phase>
	    <goals>
	      <goal>merge</goal>
	    </goals>
	    <configuration>
	      <fileSets>
		<fileSet>
		  <directory>${project.build.directory}</directory>
		  <includes>
		    <include>*.exec</include>
		  </includes>
		</fileSet>
	      </fileSets>
	      <destFile>${project.build.directory}/jacoco-aggregated.exec</destFile>
	    </configuration>
	  </execution>

	  <!-- Generate report of aggregated test results -->
	  <execution>
	    <id>post-merge-report</id>
	    <phase>verify</phase>
	    <goals>
	      <goal>report</goal>
	    </goals>
	    <configuration>
	      <dataFile>${project.build.directory}/jacoco-aggregated.exec</dataFile>
	      <outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregated
	      </outputDirectory>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
	<plugin>
	  <groupId>org.jacoco</groupId>
	  <artifactId>jacoco-maven-plugin</artifactId>
	  <version>0.8.10</version>
	</plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
