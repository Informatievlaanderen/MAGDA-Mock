<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>magda</artifactId>
    <groupId>be.vlaanderen.vip.mock</groupId>
    <version>2.37.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>
  <artifactId>magdaservice</artifactId>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
      <dependency>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
          <optional>true</optional>
          <version>${lombok.version}</version>
      </dependency>
      <dependency>
          <groupId>net.logstash.logback</groupId>
          <artifactId>logstash-logback-encoder</artifactId>
          <version>${logstash.logback.version}</version>
      </dependency>

      <dependency>
          <groupId>be.vlaanderen.vip.mock</groupId>
          <artifactId>magdaconnector</artifactId>
          <version>${project.parent.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>be.vlaanderen.vip.mock</groupId>
          <artifactId>magdamock</artifactId>
          <version>${project.parent.version}</version>
          <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-actuator</artifactId>
      </dependency>
      <!-- Monitoring -->
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-core</artifactId>
      </dependency>
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-registry-prometheus</artifactId>
        <scope>runtime</scope>
      </dependency>
      <dependency>
          <groupId>io.micrometer</groupId>
          <artifactId>micrometer-tracing-bridge-brave</artifactId>
      </dependency>
      <dependency>
          <groupId>io.zipkin.reporter2</groupId>
          <artifactId>zipkin-reporter-brave</artifactId>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-ui</artifactId>
        <version>${springdoc.api}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger2</artifactId>
        <version>${springfox-swagger2.version}</version>
      </dependency>
  </dependencies>

  <build>
    <!-- replace "@...@" at compilation with values from maven information -->
    <!-- this is used in the logging configuration file (logback.xml) for application logging information such as name and version -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/docker</directory>
        <filtering>true</filtering>
        <targetPath>${project.build.directory}</targetPath>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
          <parameters>true</parameters>
          <compilerArgs>
            <compilerArg>
              -Amapstruct.suppressGeneratorTimestamp=true
            </compilerArg>
            <compilerArg>
              -Amapstruct.suppressGeneratorVersionInfoComment=true
            </compilerArg>
            <compilerArg>
              -Amapstruct.defaultComponentModel=spring
            </compilerArg>
            <compilerArg>
              -Amapstruct.unmappedTargetPolicy=WARN
            </compilerArg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${mapstruct-lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
	<groupId>org.jacoco</groupId>
	<artifactId>jacoco-maven-plugin</artifactId>
	<executions>
	  <!-- Prepare jacoco agent - once for unit test and once for integration 
	       test (cucumber) -->
	  <execution>
	    <id>default-prepare-agent</id>
	    <goals>
	      <goal>prepare-agent</goal>
	    </goals>
	  </execution>
	  <execution>
	    <id>pre-integration-test</id>
	    <goals>
	      <goal>prepare-agent-integration</goal>
	    </goals>
	  </execution>

	  <!-- Generate report after unit test and another after integration tests -->
	  <execution>
	    <id>default-report</id>
	    <goals>
	      <goal>report</goal>
	    </goals>
	    <phase>prepare-package</phase>
	  </execution>

	  <execution>
	    <id>default-report-integration</id>
	    <goals>
	      <goal>report-integration</goal>
	    </goals>
	    <phase>post-integration-test</phase>
	  </execution>

	  <!-- Aggregate test coverage results of unit test and integration tests -->
	  <execution>
	    <id>merge-results</id>
	    <phase>verify</phase>
	    <goals>
	      <goal>merge</goal>
	    </goals>
	    <configuration>
	      <fileSets>
		<fileSet>
		  <directory>${project.build.directory}</directory>
		  <includes>
		    <include>*.exec</include>
		  </includes>
		</fileSet>
	      </fileSets>
	      <destFile>${project.build.directory}/jacoco-aggregated.exec</destFile>
	    </configuration>
	  </execution>

	  <!-- Generate report of aggregated test results -->
	  <execution>
	    <id>post-merge-report</id>
	    <phase>verify</phase>
	    <goals>
	      <goal>report</goal>
	    </goals>
	    <configuration>
	      <dataFile>${project.build.directory}/jacoco-aggregated.exec</dataFile>
	      <outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregated
	      </outputDirectory>
	    </configuration>
	  </execution>
	</executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      
    </plugins>
    
    <pluginManagement>
      <plugins>
	<plugin>
	  <groupId>org.jacoco</groupId>
	  <artifactId>jacoco-maven-plugin</artifactId>
	  <version>0.8.12</version>
	</plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.44.0</version>
            <configuration>
              <registry>vlaamseoverheid-magda-docker-snapshots.jfrog.io:443</registry>
              <sourceDirectory>src/main/docker</sourceDirectory>
              <verbose>all</verbose>
              <imagePullPolicy>IfNotPresent</imagePullPolicy>
              <images>
                <image>
                  <name>vlaamseoverheid-magda-docker-snapshots.jfrog.io/magda/${docker.image}:latest
                  </name>
                  <build>
                    <contextDir>${project.basedir}</contextDir>
                    <dockerFile>src/main/docker/Dockerfile-internal</dockerFile>
                    <tags>
                      <tag>${project.version}</tag>
                    </tags>
                  </build>
                </image>
                <image>
                  <name>vlaamseoverheid-magda-docker-snapshots.jfrog.io/%g/${docker.image}:%l</name>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>build-docker-image</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>push-docker-image</id>
                <goals>
                  <goal>push</goal>
                </goals>
                <phase>deploy</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.44.0</version>
            <configuration>
              <registry>vlaamseoverheid-magda-docker-releases.jfrog.io:443</registry>
              <sourceDirectory>src/main/docker</sourceDirectory>
              <verbose>all</verbose>
              <imagePullPolicy>IfNotPresent</imagePullPolicy>
              <images>
                <image>
                  <name>vlaamseoverheid-magda-docker-releases.jfrog.io/magda/${docker.image}:latest
                  </name>
                  <build>
                    <contextDir>${project.basedir}</contextDir>
                    <dockerFile>src/main/docker/Dockerfile-internal</dockerFile>
                    <tags>
                      <tag>${project.version}</tag>
                    </tags>
                  </build>
                </image>
                <image>
                  <name>vlaamseoverheid-magda-docker-releases.jfrog.io/%g/${docker.image}:%l</name>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>build-docker-image</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>push-docker-image</id>
                <goals>
                  <goal>push</goal>
                </goals>
                <phase>deploy</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
